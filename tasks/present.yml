---

- name: Install debian specific package_facts dependency
  become: true
  when: ansible_distribution == "Debian"
  ansible.builtin.package:
    name: python-apt-common
    state: present

- name: Gather package facts
  ansible.builtin.package_facts:

- name: Check for existing license manager
  ansible.builtin.stat:
    path: "{{ license_manager_install_dir }}"
  register: license_install_result

- name: Handle license installer
  when: license_manager and not license_install_result.stat.exists
  block:
    - name: Set installer
      ansible.builtin.set_fact:
        installer: "{{ license_manager_installer }}"

    - name: Get installer
      ansible.builtin.include_tasks:
        file: get_setup.yml

    - name: Include license manager install
      ansible.builtin.include_tasks:
        file: adsk_licensing_install.yml

- name: Install task dependencies
  become: true
  loop: "{{ task_dependencies }}"
  ansible.builtin.package:
    name: "{{ item }}"
    state: "present"

- name: Check for existing maya version
  ansible.builtin.stat:
    path: "{{ maya_install_dir }}"
  register: maya_install_result

- name: Handle Maya install
  when: not maya_install_result.stat.exists
  block:
    - name: Set installer
      ansible.builtin.set_fact:
        installer: "{{ maya_installer }}"

    - name: Get installer
      ansible.builtin.include_tasks:
        file: get_setup.yml

    - name: Include maya install
      ansible.builtin.include_tasks:
        file: maya_install.yml

- name: Find existing maya modules
  ansible.builtin.find:
    path: "{{ maya_modules_dir }}"
  register: maya_modules_result

- name: Extract file paths
  ansible.builtin.set_fact:
    maya_module_files: "{{ maya_modules_result.files | map(attribute='path') | map('basename') | list }}"

- name: Include maya plugin install
  when: (maya_plugin_package | lower ~ '.mod') not in maya_module_files
  loop: "{{ maya_plugin_packages }}"
  loop_control:
    loop_var: maya_plugin_package
  ansible.builtin.include_tasks:
    file: maya_plugins_install.yml

- name: Remove installer packages
  become: true
  ansible.builtin.file:
    path: "{{ maya_package_dir }}/{{ maya_package_sub_dir }}"
    state: "absent"

- name: Remove asset libs
  become: true
  when: maya_remove_asset_libs
  loop: "{{ maya_asset_libs }}"
  ansible.builtin.file:
    path: "{{ item }}"
    state: "absent"

...
